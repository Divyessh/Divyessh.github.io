<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Divyessh's Blog - Python</title><link href="hhtps://divyessh.github.io/" rel="alternate"></link><link href="feeds/python.atom.xml" rel="self"></link><id>hhtps://divyessh.github.io/</id><updated>2020-10-29T00:00:00+05:30</updated><entry><title>API - An application programming interface</title><link href="api-an-application-programming-interface.html" rel="alternate"></link><published>2020-10-29T00:00:00+05:30</published><updated>2020-10-29T00:00:00+05:30</updated><author><name>Divyessh Maheshwari</name></author><id>tag:None,2020-10-29:api-an-application-programming-interface.html</id><summary type="html">&lt;h1&gt;Introduction&lt;/h1&gt;
&lt;p&gt;'An application programming interface (API) is a computing interface which defines interactions between multiple software intermediaries.'&lt;/p&gt;
&lt;p&gt;Today we are going to discuss about different API frameworks in Python.&lt;/p&gt;
&lt;p&gt;Both Django and Flask are great frameworks.
Django comes in handy when a service depends on a database, needs a simple …&lt;/p&gt;</summary><content type="html">&lt;h1&gt;Introduction&lt;/h1&gt;
&lt;p&gt;'An application programming interface (API) is a computing interface which defines interactions between multiple software intermediaries.'&lt;/p&gt;
&lt;p&gt;Today we are going to discuss about different API frameworks in Python.&lt;/p&gt;
&lt;p&gt;Both Django and Flask are great frameworks.
Django comes in handy when a service depends on a database, needs a simple admin interface and perhaps a requires a nice web GUI. All that comes out of the box with Django thanks to its admin app and template engine.
When a simple micro-service that exposes a couple API Endpoints is needed, this is where Flask shines. Moreover, Flask can be easily extended, as there are a lot of external packages if we need templates.
However when it comes to RESTful microservices, both Flask and Django did not live up to expectations when it came to performance and development speed. This is when we found Fast API.&lt;/p&gt;
&lt;h1&gt;Usage and Speed&lt;/h1&gt;
&lt;p&gt;Here we are only concerned about a RESTful Micro-service, which would have the following as basic requirements. &lt;br&gt;
Exposes REST endpoint/s. &lt;br&gt;
OpenAPI(Swagger) documentation. &lt;br&gt;
Database connection (Optional).&lt;/p&gt;
&lt;h2&gt;Django&lt;/h2&gt;
&lt;p&gt;Django package does include REST API’s for that Django-rest-framework is your best option. It comes with a ton of features, but Open API generation is not among those features :). It comes with its own documentation for REST APIs though. For Open API documentation, drf-yasg or django-rest-swagger packages can be used. Trying to extend the documentation is quite painful with any of these and sometimes we even had to just use .yaml files instead.&lt;/p&gt;
&lt;h2&gt;Flask&lt;/h2&gt;
&lt;p&gt;No external packages are required to create REST endpoints with Flask however, for Open API documentation external packages like Flask-restplus can be utilised, However it usually generates outdated version of Open API documentation. But still it is a nice option.&lt;/p&gt;
&lt;h2&gt;FastAPI&lt;/h2&gt;
&lt;p&gt;Creating a REST API endpoint with Fast API and Open API takes less than a 5 minutes. It does not require any template. Changing the customizing documentation and adding validations is quite easy and it is explained in the documentation.&lt;/p&gt;
&lt;p&gt;For documentation click &lt;a href="https://pydantic-docs.helpmanual.io/usage/schema/"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Also it uses &lt;code&gt;uvicorn&lt;/code&gt; or optionally &lt;code&gt;hyoercorn&lt;/code&gt; as its ASGI servers, which makes it really user friendly. And when it comes to speed no other api framework can beat it.&lt;/p&gt;
&lt;p&gt;Thank You and please visit the facebook link for connecting and interacting.&lt;/p&gt;</content><category term="Python"></category></entry><entry><title>My experience of PyCon India</title><link href="my-experience-of-pycon-india.html" rel="alternate"></link><published>2020-10-13T00:00:00+05:30</published><updated>2020-10-13T00:00:00+05:30</updated><author><name>Divyessh Maheshwari</name></author><id>tag:None,2020-10-13:my-experience-of-pycon-india.html</id><summary type="html">&lt;h1&gt;Introduction&lt;/h1&gt;
&lt;p&gt;This was my first PyCon India and in the following post I am going to share my experience and learning from the conference. Conference days took place on 2nd and 3rd October 2020.
Although the conference was online it was conducted really well and I enjoyed a lot attending …&lt;/p&gt;</summary><content type="html">&lt;h1&gt;Introduction&lt;/h1&gt;
&lt;p&gt;This was my first PyCon India and in the following post I am going to share my experience and learning from the conference. Conference days took place on 2nd and 3rd October 2020.
Although the conference was online it was conducted really well and I enjoyed a lot attending it. There were folks from many different areas of the world who shared their knowledge and learnings in the talks, keynotes and many more events.&lt;/p&gt;
&lt;p&gt;From live coding sessions in keynotes to talks about community, diversity, and bringing about positive change in the community. The esteemed keynote speakers have covered the spectrum of presenting some truly inspirational content at PyCon India.&lt;/p&gt;
&lt;h1&gt;Keynotes&lt;/h1&gt;
&lt;p&gt;All keynotes took place in stage Bengaluru. Each and every keynote was really nice and very educational but I would like to share one of the Keynotes in detail that were given by &lt;a href="https://www.linkedin.com/in/sanand0/"&gt;Mr. S. Anand&lt;/a&gt;. &lt;/p&gt;
&lt;h2&gt;Keynote - Making Apps Seems Faster Without Optimizing&lt;/h2&gt;
&lt;p&gt;Let us begin with the keynote of &lt;a href="https://www.linkedin.com/in/sanand0/"&gt;Mr. S. Anand&lt;/a&gt;. CEO of Gramener, which was probably the best begining for the Conference. 
With "&lt;em&gt;Making Apps Seems Faster Without Optimizing&lt;/em&gt;" as the topic, the talk was full of great knowledge. The concepts were based on the usability principle of Robustness.
So the concepts were summarised as :&lt;/p&gt;
&lt;h3&gt;Prioritize :&lt;/h3&gt;
&lt;p&gt;Show most important things first. &lt;strong&gt;Progressive enhancement&lt;/strong&gt;. Calculate the most impactful change first.&lt;/p&gt;
&lt;h3&gt;Update Users :&lt;/h3&gt;
&lt;p&gt;Dont let the user see a blank black screen. Print the progress. At least users know the app is doing something. 
&lt;strong&gt;Logging()&lt;/strong&gt; is more flexible. You can control levels, show time, and save logs. 
But &lt;strong&gt;tqdm()&lt;/strong&gt; shows % completion whihc has a great appearence.
&lt;strong&gt;Websockets&lt;/strong&gt; are a great way to share progress in web apps.
Set beatable expectations.&lt;/p&gt;
&lt;h3&gt;Recover from errors :&lt;/h3&gt;
&lt;p&gt;Continue from where they left off. Cache the calculations (&lt;strong&gt;SqliteDict&lt;/strong&gt;) , and reload past calculations on re-start. Invalidate the cache if inputs have changed&lt;/p&gt;
&lt;h3&gt;Pre Compute :&lt;/h3&gt;
&lt;p&gt;Calculate common things upfront. Pre-compute things that don’t change much.&lt;/p&gt;
&lt;p&gt;For the slides of the talk : &lt;a href="https://github.com/sanand0/pyconindia2020/blob/master/pycon-india-2020-keynote.pptx"&gt;click here&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I shared this one in such details because this was something that I actually could understand really well and am seriously looking forward to imply in my code.&lt;/p&gt;
&lt;h1&gt;Talks&lt;/h1&gt;
&lt;p&gt;This time the talks took place at different stages simultaneously ( Bengaluru, Pune, Chennai, Delhi and Hydrabad ) and every one of the talks I attended was very entertaining and educational. We had to choose that which stage we would like to get in and attend the talk of our choice. But I would have really liked it if I could attend all sessions live. But I also agree that conducting so many talks in two days and also providing recordings is in itself a great management.&lt;/p&gt;
&lt;p&gt;So now let us discuss some of my favourite talks:&lt;/p&gt;
&lt;h2&gt;Publishing well-formed Python packages by Julin S&lt;/h2&gt;
&lt;p&gt;I enjoyed this talk a lot since I was learning how to package a my application and it was actually a great help for me at the time. I specially found the presentations to be designed really well. Also the communication skills were very good.&lt;/p&gt;
&lt;h2&gt;Revolutionize the Web with Python - Brython by Antriksh Verma&lt;/h2&gt;
&lt;p&gt;This one particularly caught my attention not only because of the great content and a solution for my future web app development but also because of seeing a kid with same age of mine giving the presentation and talk which is probably because I feel that as I am getting into a higher grade I keep on giving less stage talks and so I have started developing a small fear of speaking with or without a good preparation and that confidence. So yeah I enjoyed it too.&lt;/p&gt;
&lt;h2&gt;Lightning talks&lt;/h2&gt;
&lt;p&gt;I really appriciate the way people came in front and gave the presentation about how they implemented python in their life. It was very good to hear about those experience and I am pretty sure that it has given me a great inspiration for finding solutions for my small problems by python (programming).&lt;/p&gt;</content><category term="Python"></category></entry><entry><title>Starting with the Journey of Python</title><link href="starting-with-the-journey-of-python.html" rel="alternate"></link><published>2020-08-10T00:00:00+05:30</published><updated>2020-08-10T00:00:00+05:30</updated><author><name>Divyessh Maheshwari</name></author><id>tag:None,2020-08-10:starting-with-the-journey-of-python.html</id><summary type="html">&lt;h1&gt;Hello World&lt;/h1&gt;
&lt;p&gt;With the interest in Mathematics and curosity to learn programming, about four months ago I started to learn Python. Python was the choice as it was the latest language that I knew and also the most trending. The absolute start was from &lt;a href="https://youtube.com"&gt;YouTube&lt;/a&gt;, a 3 hour tutorial and …&lt;/p&gt;</summary><content type="html">&lt;h1&gt;Hello World&lt;/h1&gt;
&lt;p&gt;With the interest in Mathematics and curosity to learn programming, about four months ago I started to learn Python. Python was the choice as it was the latest language that I knew and also the most trending. The absolute start was from &lt;a href="https://youtube.com"&gt;YouTube&lt;/a&gt;, a 3 hour tutorial and then many small and different lectures. After I learnt the basics, my interest to explore it and curosity both hiked up. Once I got a game tutorial in my YouTube recommendations. This made me create my first python game using the turtle library. Then I made a game with the turtle library and my imagination. I placed that game on a online source code market. In a month it was sold for around 10 USD and that was the moment which gave me the boost for exploring other feilds in python.&lt;/p&gt;
&lt;h1&gt;Data and Science&lt;/h1&gt;
&lt;p&gt;After making some good games, I wanted to explore more so my maternal Uncle &lt;a href="https://in.linkedin.com/in/i-am-amit-maheshwari-pmp"&gt;Mr Amit&lt;/a&gt; suggested me and I went on &lt;a href="https://udemy.com"&gt;Udemy&lt;/a&gt; and purchased a Data Science course with Mr Jose Portila as the instructor. It was the one that created my foundation. I learned the basics of most of the libraries in it like scikit-learn and tensorflow. My Uncle also asked me to make an account on the very famous platform known as &lt;a href="https://stackoverflow.com"&gt;StackOverflow&lt;/a&gt; where people can ask teir doubts and answer to the questions asked by others. This was also a big step for me as initially I was unable to answer a single question but as I practiced more I gradually started to answer question and started to build reputation(the points awarded by SO for answering questions). My another Uncle introduced me to &lt;a href="https://in.linkedin.com/in/satyaakam"&gt;Mr Satyakam Goswami&lt;/a&gt;. He is currently guiding and mentoring me through my journey.&lt;/p&gt;
&lt;h1&gt;What next!&lt;/h1&gt;
&lt;p&gt;On this Blog, I will share with you the problems I faced ( with solutions ), the learnings I have got so far and the next stations of this journey. So I hope that you will like to read them all and enjoy with me. See you soon!&lt;/p&gt;</content><category term="Python"></category></entry></feed>